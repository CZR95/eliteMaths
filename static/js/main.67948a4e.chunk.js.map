{"version":3,"sources":["images/logo/eliteMaths_logo.png","images/chatbot_image_1.jpg","logo.svg","locales/i18n.js","global/Config.js","layouts/VerticalCenterText.js","components/header/Header_1.js","layouts/BreakLine.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","resources","en","translation","cn_simp","cn_trad","i18n","use","reactI18nextModule","init","lng","keySeparator","interpolation","escapeValue","width","SomeOtherComponent","VerticalCenterText","Component","title","aaa","this","props","children","titleText","divHeightValue","divHeight","divPadding","py","px","console","log","divCss","height","padding","textAlign","verticalAlign","titleStyle","style","BreakLine","brTag","i","num","App","state","showInfo","widthValue","window","innerWidth","setState","innerHeight","t","className","Container","fluid","queries","sm","md","smd","lg","matches","Row","Col","src","ChatbotImage_1","withNamespaces","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.67948a4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eliteMaths_logo.24d3f7e1.png\";","module.exports = __webpack_public_path__ + \"static/media/chatbot_image_1.c7640a04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import i18n from \"i18next\";\r\nimport { reactI18nextModule } from \"react-i18next\";\r\n\r\nimport string_en from \"../locales/en.json\";\r\nimport string_cn_simp from \"../locales/cn-simp.json\";\r\nimport string_cn_trad from \"../locales/cn-tran.json\";\r\n\r\n// the translations\r\nconst resources = {\r\n  en: {\r\n    translation: string_en,\r\n  },\r\n  cn_simp: {\r\n    translation: string_cn_simp,\r\n  },\r\n  cn_trad: {\r\n    translation: string_cn_trad,\r\n  },\r\n};\r\n\r\ni18n\r\n  .use(reactI18nextModule) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: \"en\",\r\n\r\n    keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","let width = \"000\";\r\n\r\nexport const SomeOtherComponent = () => {\r\n  return width;\r\n};\r\n\r\nexport const setScreenWidth = (widthValue) => {\r\n  width = widthValue;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nclass VerticalCenterText extends Component {\r\n  render() {\r\n    let aaa = this.props.children;\r\n    let sss = this.props.titleText;\r\n\r\n    let title;\r\n    let titleText = this.props.titleText;\r\n    let divHeightValue = this.props.divHeight;\r\n    let pyValue = this.props.py != null ? this.props.py : 0;\r\n    let pxValue = this.props.px != null ? this.props.px : 0;\r\n\r\n    let divPadding = pyValue + \"vh \" + pxValue + \"vh\";\r\n    let divHeight = divHeightValue + \"vh\";\r\n\r\n    console.log(divPadding);\r\n    console.log(divHeight);\r\n    let divCss = {\r\n      height: divHeight,\r\n      padding: divPadding,\r\n      textAlign: \"center\",\r\n      verticalAlign: \"middle\",\r\n    };\r\n\r\n    console.log(divCss);\r\n\r\n    switch (this.props.titleStyle) {\r\n      case \"h1\":\r\n        title = <h1>{titleText}</h1>;\r\n        break;\r\n      case \"h2\":\r\n        title = <h2>{titleText}</h2>;\r\n        break;\r\n      case \"h3\":\r\n        title = <h3>{titleText}</h3>;\r\n        break;\r\n      case \"h4\":\r\n        title = <h4>{titleText}</h4>;\r\n        break;\r\n      case \"h5\":\r\n        title = <h5>{titleText}</h5>;\r\n        break;\r\n      case \"h6\":\r\n        title = <h6>{titleText}</h6>;\r\n        break;\r\n      default:\r\n        title = <h3>{titleText}</h3>;\r\n    }\r\n\r\n    return (\r\n      <div style={divCss}>\r\n        {/* {title} */}\r\n        {title}\r\n        {aaa}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VerticalCenterText;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport EliteMathsLogo from \"../../images/logo/eliteMaths_logo.png\";\r\n\r\nclass Header_1 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col lg={{ span: 1, offset: 4 }}>\r\n            <img src={EliteMathsLogo} className=\"img-fluid\" />\r\n          </Col>\r\n          <Col lg={{ span: 2, offset: 0 }}>\r\n            <h3>EliteMaths</h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header_1;\r\n","import React, { Component } from \"react\";\r\n\r\nclass BreakLine extends Component {\r\n  render() {\r\n    let brTag;\r\n    let num = this.props.num;\r\n\r\n    console.log(num);\r\n    var i;\r\n    for (i = 0; i < num; i++) {\r\n      brTag = (\r\n        <div>\r\n          {brTag} <br />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    console.log(brTag);\r\n\r\n    return <div>{brTag}</div>;\r\n  }\r\n}\r\n\r\nexport default BreakLine;\r\n","import React, { Component, Fragment } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport i18n from \"./locales/i18n.js\";\nimport { SomeOtherComponent, setScreenWidth } from \"./global/Config\";\nimport Header_1 from \"./components/header/Header_1\";\nimport VerticalCenterText from \"./layouts/VerticalCenterText\";\nimport BreakLine from \"./layouts/BreakLine\";\nimport ChatbotImage_1 from \"./images/chatbot_image_1.jpg\";\n\nimport { withNamespaces } from \"react-i18next\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Media from \"react-media\";\n\nclass App extends Component {\n  state = {\n    showInfo: false,\n  };\n\n  componentDidMount() {\n    setScreenWidth(window.innerWidth);\n    this.setState({ height: window.innerHeight + \"px\" });\n  }\n\n  render() {\n    const { t } = this.props;\n    console.log(SomeOtherComponent());\n\n    SomeOtherComponent();\n\n    console.log(\"height \" + window.innerHeight);\n\n    return (\n      <div className=\"App\">\n        {/* <Header_1 /> */}\n        <Container fluid>\n          {/* <h1> {t(\"welcome_to_react\")}</h1> */}\n\n          <Media\n            queries={{\n              sm: \"(max-width: 767px)\",\n              md: \"(min-width: 768px) and (max-width: 991px)\",\n              smd: \"(max-width: 991px)\",\n              lg: \"(min-width: 992px)\",\n            }}\n          >\n            {(matches) => (\n              <Fragment>\n                {matches.smd && <BreakLine num={1} />}\n                {matches.lg && <BreakLine num={5} />}\n              </Fragment>\n            )}\n          </Media>\n\n          <Row>\n            <Media\n              queries={{\n                sm: \"(max-width: 767px)\",\n                md: \"(min-width: 768px) and (max-width: 991px)\",\n                smd: \"(max-width: 991px)\",\n                lg: \"(min-width: 992px)\",\n              }}\n            >\n              {(matches) => (\n                <Fragment>\n                  {matches.smd && (\n                    <Col md={12}>\n                      <VerticalCenterText\n                        divHeight=\"40\"\n                        py=\"3\"\n                        px=\"1\"\n                        titleText=\"Welcome to EliteMaths\"\n                        titleStyle=\"h2\"\n                      >\n                        Hi, I'm EliteMaths a chatbot system that teach\n                        mathematic. There are a lot of maths outside the world,\n                        I might not perfect as you wish, but I will slowly\n                        improve it! If you wish to chat with me, just simply\n                        click the button below and say \"Hi\" to me\n                      </VerticalCenterText>\n                    </Col>\n                  )}\n                  {matches.lg && (\n                    <Col lg={6}>\n                      <VerticalCenterText\n                        divHeight=\"80\"\n                        py=\"20\"\n                        px=\"8\"\n                        titleText=\"Welcome to EliteMaths\"\n                        titleStyle=\"h1\"\n                      >\n                        Hi, I'm EliteMaths a chatbot system that teach\n                        mathematic. There are a lot of maths outside the world,\n                        I might not perfect as you wish, but I will slowly\n                        improve it! If you wish to chat with me, just simply\n                        click the button below and say \"Hi\" to me\n                      </VerticalCenterText>\n                    </Col>\n                  )}\n                </Fragment>\n              )}\n            </Media>\n\n            <Col md={12} lg={6}>\n              <img src={ChatbotImage_1} className=\"img-fluid\" />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withNamespaces()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./locales/i18n\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}